// header file for oreore-OS application
 const __sys_table  0x00000000004023e8
 const __conout  0x00000000004023f8
 const __puts  0x0000000000402408
 const __boot_service  0x0000000000402428
 const __runtime_service  0x0000000000402430
 const __allocate_pool  0x0000000000402468
 const __free_pool  0x0000000000402470
 const __create_event  0x0000000000402478
 const __wait_event  0x0000000000402480
 const __set_timer  0x0000000000402490
 const EOF  0xffffffffffffffff
 const ERROR  0xffffffffffffffff
 const NULL  0x0000000000000000
 const SPACE  0x0000000000000020
 const CR  0x000000000000000d
 const LF  0x000000000000000a
 const PLUS  0x000000000000002b
 const MINUS  0x000000000000002d
 const MULT  0x000000000000002a
 const DIV  0x000000000000002f
 const ESC  0x000000000000001b
 const CONOUT  0x0000000000000001
 const CONIN  0x0000000000000002
 const NaN  0x8000000000000000
 const FILE_SIZE  0x0000000000000010
 const VOL_SIZE  0x0000000000000400
 const VOL_FP  0x0000000000000000
 const FILE_FP  0x0000000000000008
 const VOL_CLOSE0  0x0000000000000010
 const VOL_READ0  0x0000000000000020
 const FILE_OPEN  0x0000000000000008
 const FILE_CLOSE  0x0000000000000010
 const FILE_DELETE  0x0000000000000018
 const FILE_READ  0x0000000000000020
 const FILE_WRITE  0x0000000000000028
 const FILE_SET_POS  0x0000000000000030
 const FILE_GET_POS  0x0000000000000038
 const FILE_GET_INFO  0x0000000000000040
 const FILE_SET_INFO  0x0000000000000048
 const FILE_FLUSH  0x0000000000000050
 const BootService.signature  0x0000000000000000
 const BootService.revision  0x0000000000000008
 const BootService.headersize  0x000000000000000c
 const BootService.crc32  0x0000000000000010
 const BootService.reserved  0x0000000000000014
 const BootService.raise_tpl  0x0000000000000018
 const BootService.restore_tpl  0x0000000000000020
 const BootService.allocate_pages  0x0000000000000028
 const BootService.free_pages  0x0000000000000030
 const BootService.get_memory_map  0x0000000000000038
 const BootService.allocate_pool  0x0000000000000040
 const BootService.free_pool  0x0000000000000048
 const BootService.create_event  0x0000000000000050
 const BootService.set_timer  0x0000000000000058
 const BootService.wait_for_event  0x0000000000000060
 const BootService.signal_event  0x0000000000000068
 const BootService.close_event  0x0000000000000070
 const BootService.check_event  0x0000000000000078
 const BootService.install_protocol_interface  0x0000000000000080
 const BootService.reinstall_protocol_interface  0x0000000000000088
 const BootService.uninstall_protocol_interface  0x0000000000000090
 const BootService.handle_protocol  0x0000000000000098
 const BootService.__reserved  0x00000000000000a0
 const BootService.register_protocol_notify  0x00000000000000a8
 const BootService.locate_handle  0x00000000000000b0
 const BootService.locate_device_path  0x00000000000000b8
 const BootService.install_configuration_table  0x00000000000000c0
 const BootService.load_image  0x00000000000000c8
 const BootService.start_image  0x00000000000000d0
 const BootService.exit  0x00000000000000d8
 const BootService.unload_image  0x00000000000000e0
 const BootService.exit_boot_services  0x00000000000000e8
 const BootService.get_next_monotonic_count  0x00000000000000f0
 const BootService.stall  0x00000000000000f8
 const BootService.set_watchdog_timer  0x0000000000000100
 const BootService.connect_controller  0x0000000000000108
 const BootService.disconnect_controller  0x0000000000000110
 const BootService.open_protocol  0x0000000000000118
 const BootService.close_protocol  0x0000000000000120
 const BootService.open_protocol_information  0x0000000000000128
 const BootService.protocols_per_handle  0x0000000000000130
 const BootService.locate_handle_buffer  0x0000000000000138
 const BootService.locate_protocol  0x0000000000000140
 const BootService.install_multiple_protocol_interfaces  0x0000000000000148
 const BootService.uninstall_multiple_protocol_interfaces  0x0000000000000150
 const BootService.calculate_crc32  0x0000000000000158
 const BootService.copy_mem  0x0000000000000160
 const BootService.set_mem  0x0000000000000168
 const BootService.create_event_ex  0x0000000000000170
 const RuntimeService.signature  0x0000000000000000
 const RuntimeService.revision  0x0000000000000008
 const RuntimeService.headersize  0x000000000000000c
 const RuntimeService.crc32  0x0000000000000010
 const RuntimeService.reserved  0x0000000000000014
 const RuntimeService.get_time  0x0000000000000018
 const RuntimeService.set_time  0x0000000000000020
 const RuntimeService.get_wakeup_time  0x0000000000000028
 const RuntimeService.set_wakeup_time  0x0000000000000030
 const RuntimeService.set_virtual_address_map  0x0000000000000038
 const RuntimeService.convert_pointer  0x0000000000000040
 const RuntimeService.get_variable  0x0000000000000048
 const RuntimeService.get_next_variable  0x0000000000000050
 const RuntimeService.set_variable  0x0000000000000058
 const RuntimeService.get_next_high_mono_count  0x0000000000000060
 const RuntimeService.reset_system  0x0000000000000068
 const RuntimeService.update_capsule  0x0000000000000070
 const RuntimeService.query_capsule_caps  0x0000000000000078
 const RuntimeService.query_variable_info  0x0000000000000080
 const TCB.status  0x0000000000000000
 const TCB.cmd_line  0x0000000000000008
 const TCB.prog_start  0x0000000000000010
 const TCB.prog_size  0x0000000000000018
 const TCB.stack  0x0000000000000020
 const TCB.indev  0x0000000000000028
 const TCB.outdev  0x0000000000000030
 const TCB.message  0x0000000000000038
 const TCB.client  0x0000000000000040
 const TCB.rcx  0x0000000000000048
 const TCB.rdx  0x0000000000000050
 const TCB.rdi  0x0000000000000058
 const TCB.rsi  0x0000000000000060
 const TCB.r8  0x0000000000000068
 const TCB.r9  0x0000000000000070
 const TCB.r10  0x0000000000000078
 const TCB.r11  0x0000000000000080
 const TCB.r12  0x0000000000000088
 const TCB.prev  0x00000000000000a0
 const TCB.next  0x00000000000000a8
 const TCB.sp  0x00000000000000b0
 const TCB.SIZE  0x00000000000000b8
 const RUN  0x0000000000000000
 const READY  0x0000000000000001
 const WAIT  0x0000000000000002
 const _start  0x0000000000404000
 const SYNC  0x0000000000000000
 const CREATE_TASK  0x0000000000000001
 const KILL_TASK  0x0000000000000002
 const RUN_TASK  0x0000000000000003
 const STOP_TASK  0x0000000000000004
 const WAIT_TASK  0x0000000000000005
 const GO_TASK  0x0000000000000006
 const RET_TASK  0x0000000000000007
 const SEND_MESSAGE  0x0000000000000008
 const GET_MESSAGE  0x0000000000000009
 const _WIDE  0x000000000000000a
 const _NALLOW  0x000000000000000b
 const GETC  0x000000000000000c
 const _READ  0x000000000000000d
 const PUTC  0x000000000000000e
 const _WRITE  0x000000000000000f
 const WOPEN  0x0000000000000010
 const ROPEN  0x0000000000000011
 const OPEN  0x0000000000000012
 const RCLOSE  0x0000000000000013
 const WCLOSE  0x0000000000000014
 const DELETE  0x0000000000000015
 const VOL_OPEN  0x0000000000000016
 const VOL_CLOSE  0x0000000000000017
 const VOL_READ  0x0000000000000018
 const FPRINTS  0x0000000000000019
 const FPRINTD  0x000000000000001a
 const FNL  0x000000000000001b
 const FINPUTS  0x000000000000001c
 const STRCMP  0x000000000000001d
 const STRNCMP  0x000000000000001e
 const STRCPY  0x000000000000001f
 const STRNCPY  0x0000000000000020
 const STRCAT  0x0000000000000021
 const STRNCAT  0x0000000000000022
 const STRSTR  0x0000000000000023
 const STRLEN  0x0000000000000024
 const ATOI  0x0000000000000025
 const ITOA  0x0000000000000026
 const BIN  0x0000000000000027
 const OCT  0x0000000000000028
 const DEC  0x0000000000000029
 const HEX  0x000000000000002a
 const ABS  0x000000000000002b
 const PALLOC  0x000000000000002c
 const PFREE  0x000000000000002d
 const MALLOC  0x000000000000002e
 const FREE  0x000000000000002f
 const LOAD  0x0000000000000030
 const EXEC_COMMAND  0x0000000000000031
 const LOCATE_PROTOCOL  0x0000000000000032
 const CLS  0x0000000000000064
 const LOCATE  0x0000000000000065
 const CURSOR  0x0000000000000066
 const INKEY  0x0000000000000067
 const GETCH  0x0000000000000068
 const PUTCH  0x0000000000000069
 const WPUTS  0x000000000000006a
 const math_sin  0x000000000040f11e
 const math_cos  0x000000000040f680
 const math_tan  0x000000000040f77f
 const math_arctan  0x000000000040fa3f
 const math_exp  0x0000000000410512
 const math_log  0x0000000000410d7f
 const math_random  0x00000000004114a1
 const math_power  0x000000000041152e
 const xdraw_point  0x00000000004116e4
 const xget_point  0x000000000041190d
 const xdraw_line  0x0000000000411a83
 const xgcls  0x000000000041267e
 const xfill_rect  0x00000000004128f9
 const xdraw_rect  0x0000000000412ef8
 const xfill_circle  0x00000000004136f8
 const xdraw_circle  0x0000000000413870
 const xpaint  0x0000000000414420
 const xdraw_image  0x0000000000415299
 const load_image  0x0000000000415d22
 const save_image  0x0000000000416433
 const xval  0x0000000000417d90
 const xstr  0x00000000004199c6
 const printr  0x000000000041b409
 const fprintr  0x000000000041b4f5
 const __critical  0x000000000041cc28
 const __stack_p  0x000000000041cc30
 const __int_enable  0x000000000041cc38
 const __int_busy  0x000000000041cc40
 const __sys_nest  0x000000000041cc48
 const time  0x000000000041cc58
 const SYS_CALL  0x000000000041cc60
 const SYS_EXT  0x000000000041cc68
 const tasks  0x000000000041cc70
 const present_task  0x000000000041cc78
 const __stack_top  0x000000000041cc80
 const tcb0  0x000000000041cc88
 const cmd_buf  0x000000000041ce30
 const argc  0x000000000041d130
 const argv  0x000000000041d138
 const taskman  0x000000000041d210
 const graphic_protocol  0x000000000041d4e8
 const pointer_protocol  0x000000000041d4f0
 const graphic_mode  0x000000000041d500
 const graphic_info  0x000000000041d508
 const graphic_base  0x000000000041d510
 const set_mode  0x000000000041d518
 const screen_width  0x000000000041d520
 const screen_height  0x000000000041d528
 const mouse_reset  0x000000000041d530
 const mouse_get_state  0x000000000041d538
 const vector_ap1  0x000000000041d548
 const xcolor  0x000000000041d708
 const _end  0x00000000004258b0
// "stdio.base" the base text of "stdio.rh"

__xxmain1:
  goto __xxmain2

// TCB area
 .data
__tcb:
 data 0,0,0,0,0,0,0,0
 data 0,0,0,0,0,0,0,0
 data 0,0,0,0,0,0,0,0

 long   read_p#

sync:
 @SYS_CALL(SYNC)
  end
create_task:
 @SYS_CALL(CREATE_TASK)
  end
kill_task:
 @SYS_CALL(KILL_TASK)
  end
run_task:
 @SYS_CALL(RUN_TASK)
  end
stop_task:
 @SYS_CALL(STOP_TASK)
  end
wait_task:
 @SYS_CALL(WAIT_TASK)
  end
go_task:
 @SYS_CALL(GO_TASK)
  end
ret_task:
 @SYS_CALL(RET_TASK)
  end
send_message:
 @SYS_CALL(SEND_MESSAGE)
  end
get_message:
 @SYS_CALL(GET_MESSAGE)
  end
_wide:
 @SYS_CALL(_WIDE)
  end
_nallow:
 @SYS_CALL(_NALLOW)
  end
getc:
 @SYS_CALL(GETC)
  end
_read:
 @SYS_CALL(_READ)
  end
putc:
 @SYS_CALL(PUTC)
  end
_write:
 @SYS_CALL(_WRITE)
  end
wopen:
 @SYS_CALL(WOPEN)
  end
ropen:
 @SYS_CALL(ROPEN)
  end
open:
 @SYS_CALL(OPEN)
  end
rclose:
 @SYS_CALL(RCLOSE)
  end
wclose:
 @SYS_CALL(WCLOSE)
  end
delete:
 @SYS_CALL(DELETE)
  end
vol_open:
 @SYS_CALL(VOL_OPEN)
  end
vol_close:
 @SYS_CALL(VOL_CLOSE)
  end
vol_read:
 @SYS_CALL(VOL_READ)
  end
fprints:
 @SYS_CALL(FPRINTS)
  end
fprintd:
 @SYS_CALL(FPRINTD)
  end
fnl:
 @SYS_CALL(FNL)
  end
finputs:
 @SYS_CALL(FINPUTS)
  end
strcmp:
 @SYS_CALL(STRCMP)
  end
strncmp:
 @SYS_CALL(STRNCMP)
  end
strcpy:
 @SYS_CALL(STRCPY)
  end
strncpy:
 @SYS_CALL(STRNCPY)
  end
strcat:
 @SYS_CALL(STRCAT)
  end
strncat:
 @SYS_CALL(STRNCAT)
  end
strstr:
 @SYS_CALL(STRSTR)
  end
strlen:
 @SYS_CALL(STRLEN)
  end
atoi:
 @SYS_CALL(ATOI)
  end
itoa:
 @SYS_CALL(ITOA)
  end
bin:
 @SYS_CALL(BIN)
  end
oct:
 @SYS_CALL(OCT)
  end
dec:
 @SYS_CALL(DEC)
  end
hex:
 @SYS_CALL(HEX)
  end
abs:
 @SYS_CALL(ABS)
  end
palloc:
 @SYS_CALL(PALLOC)
  end
pfree:
 @SYS_CALL(PFREE)
  end
malloc:
 @SYS_CALL(MALLOC)
  end
free:
 @SYS_CALL(FREE)
  end
load:
 @SYS_CALL(LOAD)
  end
locate_protocol:
 @SYS_CALL(LOCATE_PROTOCOL)
  end
cls:
 @SYS_CALL(CLS)
  end
locate:
 @SYS_CALL(LOCATE)
  end
cursor:
 @SYS_CALL(CURSOR)
  end
inkey:
 @SYS_CALL(INKEY)
  end
getch:
 @SYS_CALL(GETCH)
  end
putch:
 @SYS_CALL(PUTCH)
  end
wputs:
 @SYS_CALL(WPUTS)
  end
exec_command:
 @SYS_CALL(EXEC_COMMAND)
  end
exit_process:
  taskman, @SYS_CALL(GO_TASK)
  end

putchar:
  stdout#, putc
  end
nl:
  stdout#, fnl
  end
prints:
  stdout#, fprints
  end
printd:
  stdout#, fprintd
  end
getchar:
  stdin#, getc
  end
inputs:
  stdin#, finputs
  end

restore:
 read_p#=
 end

read:
 read_p#, 8, + read_p#=
 (read_p)#(-1), end

wait:
  long _time_limit#
  time#, + _time_limit#=
__wait1:
  sync
  if time#<=_time_limit# goto __wait1
  end


__xxmain2:

  long   _indev#,_outdev#,stdin#,stdout#,_flags#
  char  _infile$(FILE_SIZE),_outfile$(FILE_SIZE)

  CONIN,    stdin#=
  CONOUT, stdout#=
  present_task#, ->TCB.indev#    _indev#=
  present_task#, ->TCB.outdev#  _outdev#=
  if (_indev)$=NULL goto __xxmain3
    _indev#,  _infile, ropen _flags#=
    if _flags#<>ERROR then _infile, stdin#=
__xxmain3:
  if (_outdev)$=NULL goto __xxmain4
    _outdev#,  _outfile, wopen _flags#=
    if _flags#<>ERROR then _outfile, stdout#=
__xxmain4:
  present_task#, ->TCB.cmd_line# _flags#=
  if (_flags)$='B' then "*** background ***", prints nl
  main
  stdin#,   rclose
  stdout#, wclose
  if (_flags)$='F' then  present_task#, ->TCB.client# run_task
  _flags#, free
  exit_process
  end
